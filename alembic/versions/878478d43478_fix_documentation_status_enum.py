"""fix_documentation_status_enum

Revision ID: 878478d43478
Revises: 102663b5720a
Create Date: 2025-07-06 09:53:57.690907

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '878478d43478'
down_revision: Union[str, Sequence[str], None] = '102663b5720a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('SIdx'), table_name='scraping_jobs')
    op.drop_index(op.f('TIdx'), table_name='scraping_jobs')
    op.drop_table('scraping_jobs')
    
    # Migrate documentation_sources.status to use proper enum values
    # SQLite doesn't support ALTER COLUMN, so we'll update the values in place
    connection = op.get_bind()
    
    # Update existing status values to match new enum
    connection.execute(sa.text("""
        UPDATE documentation_sources 
        SET status = CASE 
            WHEN status = 'active' THEN 'completed'
            WHEN status = 'error' THEN 'failed'
            WHEN status = 'paused' THEN 'paused'
            ELSE 'not_started'
        END
    """))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('scraping_jobs',
    sa.Column('data', sa.TEXT(), nullable=False),
    sa.Column('message_id', sa.TEXT(), nullable=False),
    sa.Column('status', sa.INTEGER(), nullable=False),
    sa.Column('in_time', sa.INTEGER(), nullable=False),
    sa.Column('lock_time', sa.INTEGER(), nullable=True),
    sa.Column('done_time', sa.INTEGER(), nullable=True)
    )
    op.create_index(op.f('TIdx'), 'scraping_jobs', ['message_id'], unique=False)
    op.create_index(op.f('SIdx'), 'scraping_jobs', ['status'], unique=False)
    # ### end Alembic commands ###
